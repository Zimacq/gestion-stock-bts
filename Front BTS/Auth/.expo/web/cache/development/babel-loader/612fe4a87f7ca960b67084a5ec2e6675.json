{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProductsScreen = function ProductsScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    products = _useState2[0],\n    setProducts = _useState2[1];\n  useEffect(function () {\n    fetch('http://127.0.0.1:8080').then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return setProducts(data);\n    }).catch(function (error) {\n      return console.error('Failed to fetch products', error);\n    });\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Liste de produit\"\n    }), _jsx(FlatList, {\n      data: products,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsxs(View, {\n          style: styles.productContainer,\n          children: [_jsx(Text, {\n            style: styles.productName,\n            children: item.name\n          }), _jsx(Text, {\n            children: item.description\n          }), _jsx(Text, {\n            children: item.price\n          })]\n        });\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#fff'\n  },\n  title: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  productContainer: {\n    padding: 10,\n    marginTop: 10,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 5\n  },\n  productName: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});\nexport default ProductsScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","FlatList","StyleSheet","jsx","_jsx","jsxs","_jsxs","ProductsScreen","_useState","_useState2","_slicedToArray","products","setProducts","fetch","then","response","json","data","catch","error","console","style","styles","container","children","title","keyExtractor","item","id","toString","renderItem","_ref","productContainer","productName","name","description","price","create","flex","padding","backgroundColor","fontSize","fontWeight","marginBottom","marginTop","borderColor","borderWidth","borderRadius"],"sources":["C:/Users/TÃ©lo/Desktop/test api/appli-BTS-Gestion/Auth/Screens/LoginScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, FlatList, StyleSheet } from 'react-native';\r\n\r\nconst ProductsScreen = () => {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://127.0.0.1:8080') \r\n      .then(response => response.json())\r\n      .then(data => setProducts(data))\r\n      .catch(error => console.error('Failed to fetch products', error));\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Liste de produit</Text>\r\n      <FlatList\r\n        data={products}\r\n        keyExtractor={item => item.id.toString()}\r\n        renderItem={({ item }) => (\r\n          <View style={styles.productContainer}>\r\n            <Text style={styles.productName}>{item.name}</Text>\r\n            <Text>{item.description}</Text>\r\n            <Text>{item.price}</Text>\r\n          </View>\r\n        )}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    backgroundColor: '#fff'\r\n  },\r\n  title: {\r\n    fontSize: 22,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20\r\n  },\r\n  productContainer: {\r\n    padding: 10,\r\n    marginTop: 10,\r\n    borderColor: '#ccc',\r\n    borderWidth: 1,\r\n    borderRadius: 5\r\n  },\r\n  productName: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold'\r\n  }\r\n});\r\n\r\nexport default ProductsScreen;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAGnD,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EAC3B,IAAAC,SAAA,GAAgCX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAE5BX,SAAS,CAAC,YAAM;IACde,KAAK,CAAC,uBAAuB,CAAC,CAC3BC,IAAI,CAAC,UAAAC,QAAQ;MAAA,OAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC;IAAA,EAAC,CACjCF,IAAI,CAAC,UAAAG,IAAI;MAAA,OAAIL,WAAW,CAACK,IAAI,CAAC;IAAA,EAAC,CAC/BC,KAAK,CAAC,UAAAC,KAAK;MAAA,OAAIC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAAA,EAAC;EACrE,CAAC,EAAE,EAAE,CAAC;EAEN,OACEb,KAAA,CAACP,IAAI;IAACsB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BpB,IAAA,CAACJ,IAAI;MAACqB,KAAK,EAAEC,MAAM,CAACG,KAAM;MAAAD,QAAA,EAAC;IAAgB,CAAM,CAAC,EAClDpB,IAAA,CAACH,QAAQ;MACPgB,IAAI,EAAEN,QAAS;MACfe,YAAY,EAAE,SAAAA,aAAAC,IAAI;QAAA,OAAIA,IAAI,CAACC,EAAE,CAACC,QAAQ,CAAC,CAAC;MAAA,CAAC;MACzCC,UAAU,EAAE,SAAAA,WAAAC,IAAA;QAAA,IAAGJ,IAAI,GAAAI,IAAA,CAAJJ,IAAI;QAAA,OACjBrB,KAAA,CAACP,IAAI;UAACsB,KAAK,EAAEC,MAAM,CAACU,gBAAiB;UAAAR,QAAA,GACnCpB,IAAA,CAACJ,IAAI;YAACqB,KAAK,EAAEC,MAAM,CAACW,WAAY;YAAAT,QAAA,EAAEG,IAAI,CAACO;UAAI,CAAO,CAAC,EACnD9B,IAAA,CAACJ,IAAI;YAAAwB,QAAA,EAAEG,IAAI,CAACQ;UAAW,CAAO,CAAC,EAC/B/B,IAAA,CAACJ,IAAI;YAAAwB,QAAA,EAAEG,IAAI,CAACS;UAAK,CAAO,CAAC;QAAA,CACrB,CAAC;MAAA;IACP,CACH,CAAC;EAAA,CACE,CAAC;AAEX,CAAC;AAED,IAAMd,MAAM,GAAGpB,UAAU,CAACmC,MAAM,CAAC;EAC/Bd,SAAS,EAAE;IACTe,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE,EAAE;IACXC,eAAe,EAAE;EACnB,CAAC;EACDf,KAAK,EAAE;IACLgB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE;EAChB,CAAC;EACDX,gBAAgB,EAAE;IAChBO,OAAO,EAAE,EAAE;IACXK,SAAS,EAAE,EAAE;IACbC,WAAW,EAAE,MAAM;IACnBC,WAAW,EAAE,CAAC;IACdC,YAAY,EAAE;EAChB,CAAC;EACDd,WAAW,EAAE;IACXQ,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAenC,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}